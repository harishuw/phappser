<?php/********************************************class.routing.php******************Created by HUW*********************Created on 09-11-2014**************Modified on ***************************************************/ /*** Routing* <p>This class is used  to route pages</p>* <code><pre>*  $route =new routing('url/url');* * </pre></code>* * * * */class routing{	public $page;	public $uri;	public $config;        public $controller;        public $route='';        public $routes;        public $error_page;        	function __construct($url="")	{            global $controller;                       $this->controller=$controller;            if($url!='')            {                $this->route=$url;            }        }                /*Set routing*/        function set_routing()        {            $routes= $this->get_routes();            $page=$this->get_uri(0,TRUE);            $seg=$page['full'];            $main=$this->split_url($routes['index_controller']);            unset($routes['index_controller']);            if(count($seg)==0)            {               $seg=$main;            }else            {                foreach ($routes as $key => $value)                {                    if($this->check_url_match($page['actions'],$key)==TRUE)                    {                           $array1=  $this->split_url($page['actions']);                        $array2=  $this->split_url($key);                        $arrdiff=array_diff($array1, $array2);                        $seg=$this->split_url($value);                        $seg=array_merge($seg,$arrdiff);                        break;                    }                }            }            if(!file_exists('app/controller/'.$seg[0].'.php')){               array_unshift($seg,$main[0]);               }               $this->call_controller($seg);        }	function call_controller($route)        {            $controll="";            $action="";            $actioncall=true;            if(isset($route[0]))            {                $controll=trim($route[0]);                unset($route[0]);            }            if(file_exists('app/controller/'.$controll.'.php'))            {	                include('app/controller/'.$controll.'.php');                $controller=new $controll();            }else            {                $m="Controller '".$controll."' is not found";                $t="Controller not found";                echo set_error_page($m,$t);                exit;            }            //print_r($route);            if(isset($route[1]))            {                $action=$route[1];               //echo$action;                if(!is_callable(array($controller, $action)) )                {                    $actioncall=FALSE;                    $action=check_callable($controller);                }else                {                    $actioncall=TRUE;                }                 unset($route[1]);               // echo $route[1];            }else            {                $action=check_callable($controller);            }            $argarray=$route;            $argarray=  array_values($argarray);           // print_r($action);            if($actioncall)            {                        call_user_func_array(array($controller,$action),$argarray);             }else            {                              $m="There is no '". $action."' function in Controller '".$controll."'";                $t="No Action defined";                echo set_error_page($m,$t);                exit;            }        }	        function get_uri($key,$full = false)        {            $url=$_SERVER['REQUEST_SCHEME'].'://'.$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];            $base=$_SERVER['REQUEST_SCHEME']."://".$_SERVER['HTTP_HOST']. preg_replace('@/+$@','',stripslashes(dirname($_SERVER['SCRIPT_NAME']))).'/';            $furl= str_replace($base,'', $url);            $furl=str_replace('index.php','', $furl);            $qrysplit=explode('?',$furl);            $query=isset($qrysplit[1])?$qrysplit[1]:'';            $furl=isset($qrysplit[0])?$qrysplit[0]:'';            $segment= explode('/',$furl);            $segment= array_values(array_filter($segment));            if(!$full)            {                if(isset($segment[$key]))                {                    $final=explode('?',trim($segment[$key]));                    return $final[0];                }else                {                    return "";                }            }else            {                return array('base_url'=>$base,'current_url'=>$url,'full'=>$segment,'actions'=>$furl,'query'=>$query);            }        }                function split_url($url)        {            $qrysplit=explode('?',$url);            $furl=isset($qrysplit[0])?$qrysplit[0]:'';            $segment= explode('/',$furl);            $url_segment= array_values(array_filter($segment));            return $url_segment;        }                function check_url_match($url1,$url2)        {            $array1=  $this->split_url($url1);            $array2=  $this->split_url($url2);            $max=count($array1)>count($array2)?count($array1):count($array2);            $match=FALSE;            for($i=0;$i<$max;$i++)            {                if(isset($array1[$i])&&isset($array2[$i]))                {                    if($array1[$i]==$array2[$i])                    {                        $match=TRUE;                    }else                    {                        $match=FALSE;                        break;                    }                }            }                                 return $match;        }        function get_routes()        {             include_once('config/routing.php');             $this->error_page=isset($routing['error_page'])?$routing['error_page']:"";             unset($routing['error_page']);            return $routing;        }}